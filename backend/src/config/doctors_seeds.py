import logging
from src.models.doctors import Doctor
from sqlalchemy import select

logger = logging.getLogger(__name__)

doctors_data = [
    {"name": "–ê–π–¥–∞–Ω–∞ –°—É–ª–µ–π–º–µ–Ω–æ–≤–∞", "specialty": "therapist", "bio": "–û–ø—ã—Ç–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º."},
    {"name": "–ù—É—Ä–ª–∞–Ω –ê—Ö–º–µ—Ç–æ–≤", "specialty": "cardiologist", "bio": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∞—Ä–∏—Ç–º–∏—è—Ö."},
    {"name": "–°–≤–µ—Ç–ª–∞–Ω–∞ –ö–∏–º", "specialty": "dentist", "bio": "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –¥–µ—Ç—å–º–∏ –∏ –≤–∑—Ä–æ—Å–ª—ã–º–∏."},
    {"name": "–ï—Ä–∂–∞–Ω –¢–ª–µ—É–±–∞–µ–≤", "specialty": "therapist", "bio": "–¢–µ—Ä–∞–ø–µ–≤—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö."},
    {"name": "–ê–ª–∏—è –ñ—É–º–∞–≥–∞–ª–∏–µ–≤–∞", "specialty": "cardiologist", "bio": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫—É –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π."},
    {"name": "–†—É—Å–ª–∞–Ω –¢–æ–∫—Ç–∞—Ä–æ–≤", "specialty": "dentist", "bio": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏."},
]

async def seed_doctors(session):
    result = await session.execute(select(Doctor))
    existing = result.scalars().all()
    if existing:
        logger.info("‚ö†Ô∏è –î–æ–∫—Ç–æ—Ä–∞ —É–∂–µ —Å–∏–¥–∏—Ä–æ–≤–∞–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    for doc in doctors_data:
        doctor = Doctor(**doc)
        session.add(doctor)
        logger.info(f"üë®‚Äç‚öïÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–∫—Ç–æ—Ä: {doc['name']} ({doc['specialty']})")

    await session.commit()
    logger.info("üì¶ –í—Å–µ –¥–æ–∫—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ.")
